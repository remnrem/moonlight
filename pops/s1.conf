# boosting type, support gbdt for now, alias: boosting, boost
boosting_type = gbdt

# application type, support following application
# regression , regression task
# binary , binary classification task
# lambdarank , LambdaRank task
# multiclass
# alias: application, app
objective = multiclass

# eval metrics, support multi metric, delimited by ',' , support following metrics
# l1 
# l2 , default metric for regression
# ndcg , default metric for lambdarank
# auc 
# binary_logloss , default metric for binary
# binary_error
# multi_logloss
# multi_error
# auc_mu
metric = multi_logloss

# number of class, for multiclass classification
num_class = 5

# number of bins for feature bucket, 255 is a recommend setting, it can save memories, and also has good accuracy. 
max_bin = 255

# round for early stopping
early_stopping = 20

# shrinkage rate , alias: shrinkage_rate
learning_rate = 0.01

# max_depth =5, num_leaves= 90 feature_frac = 0.6 
# max tree depth
# max_depth = 6

# number of leaves for one tree, alias: num_leaf (def = 63)
num_leaves = 63

# feature sub-sample, will random select 60% feature to train on each iteration 
# alias: sub_feature
feature_fraction = 0.6

# Support bagging (data sub-sample), will perform bagging every 5 iterations
bagging_freq = 5

# Bagging fraction, will random select 60% data on bagging
bagging_fraction = 0.6

# minimal number data for one leaf, use this to deal with over-fit
# alias : min_data_per_leaf, min_data
min_data_in_leaf = 50

# minimal sum Hessians for one leaf, use this to deal with over-fit
min_sum_hessian_in_leaf = 5.0

